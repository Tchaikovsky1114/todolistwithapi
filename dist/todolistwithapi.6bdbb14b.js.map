{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","app.js","index.js"],"names":["console","log","application","document","querySelector","loadingEl","loading","orderNumber","onFocusPlaceholder","todosInputEl","setAttribute","onBlurPlaceholder","countTodos","data","todosCountEl","todosCountWrapper","length","textContent","style","display","toggleLoading","readTodo","axios","url","method","headers","renderTodos","createTodo","todos","deleteTodo","e","todosTitle","target","parentNode","firstChild","nextSibling","todosIdArray","map","item","push","id","todosTitleArray","title","todosIndex","findIndex","todoFormEl","todosValue","onAddTodosHandler","value","onSubmitTodo","preventDefault","alert","focus","addEventListener","todoList","countTodoListChildNode","childElementCount","EmptyTodosEl","createElement","innerHTML","append","onToggleDone","todosOrderArray","order","todosDoneArray","done","todo","createdAt","substr","todoTitles","join","querySelectorAll","forEach","doneToggleButton","loadButtons","deleteButtonEls","deleteButtonEl","showDoneListButton","showProgressingListButton","onToggleList","bool","filteredFalseData","filter"],"mappings":"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","file":"todolistwithapi.6bdbb14b.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","console.log('app is here');","import  regeneratorRuntime  from  \"regenerator-runtime\" ;\r\nimport  './app.js'\r\nimport './main.css'\r\nconst application = document.querySelector('#app-contents')\r\nconst loadingEl = document.querySelector('#loading')\r\n\r\nlet loading = true;\r\nlet orderNumber = 0;\r\n\r\n\r\nfunction onFocusPlaceholder() {\r\n  todosInputEl.setAttribute('placeholder', \"진짜 무적권 해야 댐!\");\r\n}\r\n\r\nfunction onBlurPlaceholder() {\r\n  todosInputEl.setAttribute('placeholder', \"쓰면 무조건 해야 됨\");\r\n}\r\n\r\nfunction countTodos(data) {\r\n  const todosCountEl = document.querySelector('.todos-count')\r\n  const todosCountWrapper = document.querySelector('.todos-count-wrapper');\r\n  if (data.length > 0) {\r\n    todosCountEl.textContent = data.length;\r\n    todosCountWrapper.style.display = 'block';\r\n  }\r\n  if (data.length === 0) {\r\n    todosCountWrapper.style.display = 'none';\r\n  }\r\n}\r\n\r\nfunction toggleLoading() {\r\n  if (loading) {\r\n    loadingEl.style.display = 'block';\r\n    application.style.display = 'none';\r\n  } else {\r\n    loadingEl.style.display = 'none';\r\n    application.style.display = 'block';\r\n  }\r\n}\r\n\r\n//GET\r\nasync function readTodo() {\r\n  loading = true;\r\n  const {\r\n    data\r\n  } = await axios({\r\n    url: 'https://asia-northeast3-heropy-api.cloudfunctions.net/api/todos',\r\n    method: 'GET',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      'apikey': 'FcKdtJs202204',\r\n      'username': 'KimMyungSeong'\r\n    },\r\n  })\r\n  renderTodos(data);\r\n  loading = false;\r\n  toggleLoading()\r\n  countTodos(data)\r\n  console.log(data);\r\n}\r\n\r\n//POST \r\nasync function createTodo(todos) {\r\n  loading = true;\r\n  orderNumber++;\r\n  toggleLoading()\r\n  await axios({\r\n    url: 'https://asia-northeast3-heropy-api.cloudfunctions.net/api/todos',\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      'apikey': 'FcKdtJs202204',\r\n      'username': 'KimMyungSeong'\r\n    },\r\n    data: {\r\n      \"title\": todos,\r\n      \"order\": orderNumber\r\n    }\r\n  })\r\n  readTodo()\r\n}\r\n\r\n// DELETE\r\nasync function deleteTodo(e) {\r\n  loading = true;\r\n  console.log('delete!')\r\n  toggleLoading();\r\n  const {\r\n    data\r\n  } = await axios({\r\n    url: 'https://asia-northeast3-heropy-api.cloudfunctions.net/api/todos/',\r\n    method: 'GET',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      'apikey': 'FcKdtJs202204',\r\n      'username': \"KimMyungSeong\"\r\n    }\r\n  })\r\n  const todosTitle = e.target.parentNode.parentNode.parentNode.firstChild.nextSibling.textContent;\r\n  console.log(todosTitle);\r\n  let todosIdArray = [];\r\n  data.map(item => todosIdArray.push(item.id));\r\n\r\n  let todosTitleArray = [];\r\n  data.map(item => todosTitleArray.push(item.title));\r\n\r\n  const todosIndex = todosTitleArray.findIndex(title => title === todosTitle)\r\n\r\n  await axios({\r\n    url: `https://asia-northeast3-heropy-api.cloudfunctions.net/api/todos/${todosIdArray[todosIndex]}`,\r\n    method: 'DELETE',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      'apikey': 'FcKdtJs202204',\r\n      'username': \"KimMyungSeong\"\r\n    }\r\n  })\r\n\r\n  \r\n  readTodo()\r\n}\r\n\r\n\r\nconst todoFormEl = document.querySelector('#todo-form');\r\nconst todosInputEl = document.querySelector('#todos-input');\r\n\r\nlet todosValue = '';\r\n\r\nfunction onAddTodosHandler(e) {\r\n  todosValue = e.target.value\r\n}\r\n\r\nfunction onSubmitTodo(e) {\r\n  e.preventDefault();\r\n  if (todosValue.length < 10) {\r\n    alert('누가 목표는 자세히 써야 실천 한다고 하더라고요(10자 이상 입력)')\r\n    return;\r\n  }\r\n  createTodo(todosValue)\r\n  readTodo()\r\n  todosInputEl.value = '';\r\n  todosInputEl.focus();\r\n}\r\n\r\n\r\n\r\ntodoFormEl.addEventListener('submit', onSubmitTodo)\r\ntodosInputEl.addEventListener('change', onAddTodosHandler)\r\ntodosInputEl.addEventListener('focus', onFocusPlaceholder)\r\ntodosInputEl.addEventListener('blur', onBlurPlaceholder)\r\n\r\nconst todoList = document.querySelector('.todos--list')\r\n\r\nfunction countTodoListChildNode() {\r\n  if (!todoList.childElementCount) {\r\n    const EmptyTodosEl = document.createElement('div');\r\n    EmptyTodosEl.innerHTML = \"아무 계획도 없습니다...\"\r\n    todoList.append(EmptyTodosEl);\r\n  }\r\n}\r\n\r\n\r\nasync function onToggleDone(e){\r\n  const {data} = await axios({\r\n    url: 'https://asia-northeast3-heropy-api.cloudfunctions.net/api/todos',\r\n    method: 'GET',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      'apikey': 'FcKdtJs202204',\r\n      'username': 'KimMyungSeong'\r\n    },\r\n  })\r\n  const todosTitle = e.target.parentNode.parentNode.firstChild.nextSibling.textContent;\r\n\r\n  let todosTitleArray = [];\r\n  data.map(item => todosTitleArray.push(item.title));\r\n  const todosIndex = todosTitleArray.findIndex(title => title === todosTitle)\r\n  console.log(todosIndex)\r\n  console.log(todosTitle);\r\n\r\n  let todosIdArray = [];\r\n  data.map(item => todosIdArray.push(item.id));\r\n\r\n  let todosOrderArray = [];\r\n  data.map(item => todosOrderArray.push(item.order))\r\n\r\n  let todosDoneArray = [];\r\n  data.map(item => todosDoneArray.push(item.done))\r\n  console.log(todosDoneArray[todosIndex]);\r\n   await axios({\r\n    url: `https://asia-northeast3-heropy-api.cloudfunctions.net/api/todos/${todosIdArray[todosIndex]}`,\r\n    method: 'PUT',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      'apikey': 'FcKdtJs202204',\r\n      'username': \"KimMyungSeong\",\r\n    },\r\n    data: {\r\n      \"title\":todosTitle,\r\n      \"order\":todosOrderArray[todosIndex],\r\n      \"done\" : !todosDoneArray[todosIndex]\r\n    }\r\n  })\r\n  readTodo()\r\n}\r\n\r\nasync function renderTodos(data) {\r\n  \r\n  const todos = await data.map((todo) => /* html */ `\r\n  <li class=\"todo\">\r\n  <div class=\"todos--title\">${todo.title}</div>\r\n  <span>(${todo.createdAt.substr(2,2)}-${todo.createdAt.substr(5,2)}-${todo.createdAt.substr(8,2)} ${todo.createdAt.substr(11,2)}:${todo.createdAt.substr(14,2)}분 작성)</span>\r\n  <div class=\"todos--button-wrapper\">\r\n  <div>\r\n  <button class=\"todos--delete-button\">삭제하기</button>\r\n  <button class=\"todos--update-button\">타협하기</button>\r\n  </div>\r\n  </div>\r\n  <div>${todo.done === false ? \"실천 중🔴\" : \"실천성공!🔵\"}<button class='todos--done-toggle-button'>체크</button></div>\r\n  </li>\r\n  `)\r\n  const todoTitles = todos.join('');\r\n  todoList.innerHTML = todoTitles;\r\n  application.append(todoList);\r\n  const doneToggleButtons = document.querySelectorAll('.todos--done-toggle-button')\r\n  doneToggleButtons.forEach((doneToggleButton)=> doneToggleButton.addEventListener('click',onToggleDone))\r\n  countTodoListChildNode();\r\n  loadButtons();\r\n}\r\n\r\n\r\nreadTodo()\r\n\r\n\r\nfunction loadButtons() {\r\n  const deleteButtonEls = document.querySelectorAll('.todos--delete-button');\r\n  const todosHandleEls = [...document.querySelectorAll('.todos--button-wrapper')];\r\n  const updateButtonEls = [...document.querySelectorAll('.todos--update-button')];\r\n  deleteButtonEls.forEach((deleteButtonEl) => deleteButtonEl.addEventListener('click', deleteTodo))\r\n}\r\n\r\nconst showDoneListButton = document.querySelector('#todos--remote-show-donelist-button')\r\nconst showProgressingListButton = document.querySelector('#todos--remote-show-progressinglist-button')\r\n\r\nasync function onToggleList(bool){\r\n  const {\r\n    data\r\n  } = await axios({\r\n    url: 'https://asia-northeast3-heropy-api.cloudfunctions.net/api/todos',\r\n    method: 'GET',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      'apikey': 'FcKdtJs202204',\r\n      'username': 'KimMyungSeong'\r\n    },\r\n  })\r\n  const filteredFalseData = data.filter(item => item.done === bool)\r\n  console.log(filteredFalseData);\r\n  todoList.innerHTML = '';\r\n  renderTodos(filteredFalseData)\r\n}\r\n\r\nshowDoneListButton.addEventListener('click',()=>onToggleList(true))\r\nshowProgressingListButton.addEventListener('click',()=>onToggleList(false))\r\n"]}